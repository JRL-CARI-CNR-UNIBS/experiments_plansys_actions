
# experiments_controller_node:
#   ros__parameters:
#     problem_name: "hospital_problem.pddl"
#     problem: "" # this is filled automatically by the launcher
#     goal: "(and (cleaned room1) (cleaned room2) (cleaned room3) (patrolled corridor) (patrolled hall) (delivered persona))"
#     # If goal is empty is kept the one of the problem

experiments_loop_controller_node:
  ros__parameters:
    problem_name: "tamer/problem.pddl" # "experiments_problem_fluents2.pddl" # experiments_problem_fluents2
    problem: ""   # This is filled automatically by the launcher
    goal: "(and (delivered persona) (cleaned room1) (cleaned room2) (cleaned room3) (patrolled hall))"  # If goal is empty is kept the one of the problem
    initial_predicates:
      # - "(robot_at robot1 start_wp_robot1)" # Can be removed
      # - "(robot_at robot2 start_wp_robot2)" # Can be removed
      - "(person_at persona entrance)"
    reset_predicates:  
      - "(cleaned room1)"
      - "(cleaned room2)"
      - "(cleaned room3)"
      - "(patrolled hall)"
      - "(delivered persona)"
      - "(person_at persona sofa)"
    n_execution: 50
    reset_world_goal: "(and (robot_at robot1 start_wp_robot1) (robot_at robot2 start_wp_robot2))"
    plan_solver_timeout: 30.0